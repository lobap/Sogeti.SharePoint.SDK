//===============================================================================
// Microsoft patterns & practices
// SharePoint Guidance version 2.0
//===============================================================================
// Copyright (c) Microsoft Corporation.  All rights reserved.
// THIS CODE AND INFORMATION IS PROVIDED "AS IS" WITHOUT WARRANTY
// OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT
// LIMITED TO THE IMPLIED WARRANTIES OF MERCHANTABILITY AND
// FITNESS FOR A PARTICULAR PURPOSE.
//===============================================================================
// The example companies, organizations, products, domain names,
// e-mail addresses, logos, people, places, and events depicted
// herein are fictitious.  No association with any real company,
// organization, product, domain name, email address, logo, person,
// places, or events is intended or should be inferred.
//===============================================================================
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3082
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PSSBVT
{
    using System;
    using System.Collections.Generic;
    using System.Text;
    using Microsoft.VisualStudio.TestTools.WebTesting;
    using Microsoft.VisualStudio.TestTools.WebTesting.Rules;
    using PSSBVT.Settings;

    /// <summary>
    /// This Test Case is browse partner1 with FBA login  and incident dashboard homepage, verify all webparts are loaded correctly
    /// </summary>
    public class VerifyPartner1IncidentHomePage_FBA : WebTest
    {
        string fbaURL = CustConfig.GetFBAURL;
        string fbaUserName = CustConfig.FBAUserName;
        string fbaUserPassword = CustConfig.FBAUserPassword;
        public VerifyPartner1IncidentHomePage_FBA()
        {
            this.PreAuthenticate = true;
        }

        public override IEnumerator<WebTestRequest> GetRequestEnumerator()
        {

            WebTestRequest frequest1 = new WebTestRequest(fbaURL);
            frequest1.ExpectedResponseUrl = fbaURL + "/_layouts/login.aspx?ReturnUrl=%2f";
            ExtractHiddenFields fextractionRule1 = new ExtractHiddenFields();
            fextractionRule1.Required = true;
            fextractionRule1.HtmlDecode = true;
            fextractionRule1.ContextParameterName = "1";
            frequest1.ExtractValues += new EventHandler<ExtractionEventArgs>(fextractionRule1.Extract);
            yield return frequest1;
            frequest1 = null;

            WebTestRequest frequest3 = new WebTestRequest(fbaURL + "/_layouts/login.aspx");
            frequest3.ThinkTime = 4;
            frequest3.Method = "POST";
            frequest3.ExpectedResponseUrl = fbaURL + "/Pages/default.aspx";
            frequest3.QueryStringParameters.Add("ReturnUrl", "%2f", false, false);
            FormPostHttpBody frequest3Body = new FormPostHttpBody();
            frequest3Body.FormPostParameters.Add("__LASTFOCUS", this.Context["$HIDDEN1.__LASTFOCUS"].ToString());
            frequest3Body.FormPostParameters.Add("__VIEWSTATE", this.Context["$HIDDEN1.__VIEWSTATE"].ToString());
            frequest3Body.FormPostParameters.Add("__EVENTTARGET", this.Context["$HIDDEN1.__EVENTTARGET"].ToString());
            frequest3Body.FormPostParameters.Add("__EVENTARGUMENT", this.Context["$HIDDEN1.__EVENTARGUMENT"].ToString());
            frequest3Body.FormPostParameters.Add("__EVENTVALIDATION", this.Context["$HIDDEN1.__EVENTVALIDATION"].ToString());
            frequest3Body.FormPostParameters.Add("ctl00$PlaceHolderMain$login$UserName", fbaUserName);
            frequest3Body.FormPostParameters.Add("ctl00$PlaceHolderMain$login$password", fbaUserPassword);
            frequest3Body.FormPostParameters.Add("ctl00$PlaceHolderMain$login$login", "Sign In");
            frequest3Body.FormPostParameters.Add("__spDummyText1", "");
            frequest3Body.FormPostParameters.Add("__spDummyText2", "");
            frequest3.Body = frequest3Body;


       
            yield return frequest3;
            frequest3 = null;

            WebTestRequest request1 = new WebTestRequest(fbaURL +"/sites/partner1");
            request1.ExpectedResponseUrl = fbaURL +"/sites/partner2/Pages/default.aspx";

            ValidationRuleFindText validationRule3 = new ValidationRuleFindText();
            validationRule3.FindText = "Incident Dashboard";
            validationRule3.IgnoreCase = true;
            validationRule3.UseRegularExpression = true;
            validationRule3.PassIfTextFound = true;
            request1.ValidateResponse += new EventHandler<ValidationEventArgs>(validationRule3.Validate);

            yield return request1;
            request1 = null;

            WebTestRequest request2 = new WebTestRequest(fbaURL +"/sites/partner1/IncidentDashboard.aspx");
            
                ValidationRuleFindText validationRule21 = new ValidationRuleFindText();
                validationRule21.FindText = "Active Incidents";
                validationRule21.IgnoreCase = true;
                validationRule21.UseRegularExpression = true;
                validationRule21.PassIfTextFound = true;
                request2.ValidateResponse += new EventHandler<ValidationEventArgs>(validationRule21.Validate);
            
                ValidationRuleFindText validationRule22 = new ValidationRuleFindText();
                validationRule22.FindText = "Closed Incidents";
                validationRule22.IgnoreCase = true;
                validationRule22.UseRegularExpression = true;
                validationRule22.PassIfTextFound = true;
                request2.ValidateResponse += new EventHandler<ValidationEventArgs>(validationRule22.Validate);
           
                ValidationRuleFindText validationRule23 = new ValidationRuleFindText();
                validationRule23.FindText = "Active Incident Tasks";
                validationRule23.IgnoreCase = true;
                validationRule23.UseRegularExpression = false;
                validationRule23.PassIfTextFound = true;
                request2.ValidateResponse += new EventHandler<ValidationEventArgs>(validationRule23.Validate);
           
            yield return request2;
            request2 = null;
                      
         }
    }
}
